# Nginx configuration for publicly accessible webserver with
# https managed by certbot.
upstream fan {
  # SSH reverse tunnel from the Raspberry Pi forwards this port
  # to the Flask application running on the Pi.
	server 127.0.0.1:8000;
}

server {
	root /var/www/html;

    server_name example.com; # managed by Certbot

	try_files $uri @fan;

	location @fan {
		proxy_pass http://fan;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_redirect off;
	}

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = example.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen 80 ;
	listen [::]:80 ;
    server_name example.com;
    return 404; # managed by Certbot
}
